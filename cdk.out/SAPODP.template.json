{
  "Resources": {
    "SAPLambdaRole4EC987E5": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AWSLambdaExecute"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "SAPODP/SAPLambdaRole/Resource"
      }
    },
    "SAPLambdaRoleDefaultPolicyE38C9FDD": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "secretsmanager:GetSecretValue",
              "Effect": "Allow",
              "Resource": {
                "Ref": "SAPAuth998143CD"
              }
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "metadatatable5CDA8741",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "databucketA1CA02F6",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "databucketA1CA02F6",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "SAPLambdaRoleDefaultPolicyE38C9FDD",
        "Roles": [
          {
            "Ref": "SAPLambdaRole4EC987E5"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "SAPODP/SAPLambdaRole/DefaultPolicy/Resource"
      }
    },
    "SAPAuth998143CD": {
      "Type": "AWS::SecretsManager::Secret",
      "Properties": {
        "GenerateSecretString": {
          "GenerateStringKey": "password",
          "SecretStringTemplate": "{\"user\":\"SAPUserName\"}"
        }
      },
      "Metadata": {
        "aws:cdk:path": "SAPODP/SAPAuth/Resource"
      }
    },
    "metadatatable5CDA8741": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "odpServiceName",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "odpEntitySetName",
            "KeyType": "RANGE"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "odpServiceName",
            "AttributeType": "S"
          },
          {
            "AttributeName": "odpEntitySetName",
            "AttributeType": "S"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "SAPODP/metadatatable/Resource"
      }
    },
    "databucketA1CA02F6": {
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "SAPODP/databucket/Resource"
      }
    },
    "ExtractorLayer2ED491C2": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Ref": "AssetParameters14b9cbb1138a9b0a69c0b6669bc755c43c36fce6dc90a9dce2d3d4a32f5c5faeS3BucketD50E262E"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters14b9cbb1138a9b0a69c0b6669bc755c43c36fce6dc90a9dce2d3d4a32f5c5faeS3VersionKey5A5C69E3"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters14b9cbb1138a9b0a69c0b6669bc755c43c36fce6dc90a9dce2d3d4a32f5c5faeS3VersionKey5A5C69E3"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "CompatibleRuntimes": [
          "python2.7",
          "python3.6",
          "python3.7"
        ],
        "Description": "Layer to dynamically generator user certificates for SAP user",
        "LicenseInfo": "Apache-2.0"
      },
      "Metadata": {
        "aws:cdk:path": "SAPODP/ExtractorLayer/Resource",
        "aws:asset:path": "asset.14b9cbb1138a9b0a69c0b6669bc755c43c36fce6dc90a9dce2d3d4a32f5c5fae",
        "aws:asset:property": "Content"
      }
    },
    "TestLambdaFunctionC089708A": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters9b8394427f6b363b4b2fe006ac103688fb17916909a0037e7661d1c25748e49bS3Bucket4ED5D74C"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters9b8394427f6b363b4b2fe006ac103688fb17916909a0037e7661d1c25748e49bS3VersionKey0D9256E2"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters9b8394427f6b363b4b2fe006ac103688fb17916909a0037e7661d1c25748e49bS3VersionKey0D9256E2"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "main.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "SAPLambdaRole4EC987E5",
            "Arn"
          ]
        },
        "Runtime": "python3.6",
        "Description": "Sample Lambda function to for extracting from ODP",
        "Environment": {
          "Variables": {
            "sapHostName": "<your sap hostname> for e.g. mysaphost.com>",
            "sapPort": "<your sap https port> for e.g. 44300",
            "sapAuthSecret": {
              "Ref": "SAPAuth998143CD"
            },
            "metaDataDDBName": {
              "Ref": "metadatatable5CDA8741"
            },
            "odpServiceName": "<your odata service name>",
            "odpEntitySetName": "<your odp entity set name within the odata service>",
            "dataChunkSize": "1000",
            "dataS3Bucket": {
              "Ref": "databucketA1CA02F6"
            },
            "dataS3Folder": "<Your Folder for storing the data to>"
          }
        },
        "Layers": [
          {
            "Ref": "ExtractorLayer2ED491C2"
          }
        ],
        "MemorySize": 2048,
        "Timeout": 300
      },
      "DependsOn": [
        "SAPLambdaRoleDefaultPolicyE38C9FDD",
        "SAPLambdaRole4EC987E5"
      ],
      "Metadata": {
        "aws:cdk:path": "SAPODP/TestLambdaFunction/Resource",
        "aws:asset:path": "asset.9b8394427f6b363b4b2fe006ac103688fb17916909a0037e7661d1c25748e49b",
        "aws:asset:property": "Code"
      }
    }
  },
  "Parameters": {
    "AssetParameters14b9cbb1138a9b0a69c0b6669bc755c43c36fce6dc90a9dce2d3d4a32f5c5faeS3BucketD50E262E": {
      "Type": "String",
      "Description": "S3 bucket for asset \"14b9cbb1138a9b0a69c0b6669bc755c43c36fce6dc90a9dce2d3d4a32f5c5fae\""
    },
    "AssetParameters14b9cbb1138a9b0a69c0b6669bc755c43c36fce6dc90a9dce2d3d4a32f5c5faeS3VersionKey5A5C69E3": {
      "Type": "String",
      "Description": "S3 key for asset version \"14b9cbb1138a9b0a69c0b6669bc755c43c36fce6dc90a9dce2d3d4a32f5c5fae\""
    },
    "AssetParameters14b9cbb1138a9b0a69c0b6669bc755c43c36fce6dc90a9dce2d3d4a32f5c5faeArtifactHash028B7BFA": {
      "Type": "String",
      "Description": "Artifact hash for asset \"14b9cbb1138a9b0a69c0b6669bc755c43c36fce6dc90a9dce2d3d4a32f5c5fae\""
    },
    "AssetParameters9b8394427f6b363b4b2fe006ac103688fb17916909a0037e7661d1c25748e49bS3Bucket4ED5D74C": {
      "Type": "String",
      "Description": "S3 bucket for asset \"9b8394427f6b363b4b2fe006ac103688fb17916909a0037e7661d1c25748e49b\""
    },
    "AssetParameters9b8394427f6b363b4b2fe006ac103688fb17916909a0037e7661d1c25748e49bS3VersionKey0D9256E2": {
      "Type": "String",
      "Description": "S3 key for asset version \"9b8394427f6b363b4b2fe006ac103688fb17916909a0037e7661d1c25748e49b\""
    },
    "AssetParameters9b8394427f6b363b4b2fe006ac103688fb17916909a0037e7661d1c25748e49bArtifactHash7EC87883": {
      "Type": "String",
      "Description": "Artifact hash for asset \"9b8394427f6b363b4b2fe006ac103688fb17916909a0037e7661d1c25748e49b\""
    }
  },
  "Outputs": {
    "S3BucketForExtracts": {
      "Description": "S3 bucket where extracted data will be stored",
      "Value": {
        "Ref": "databucketA1CA02F6"
      },
      "Export": {
        "Name": "S3BucketForExtracts"
      }
    },
    "DDBForMetaData": {
      "Description": "DynamoDB table where metadata will be stored",
      "Value": {
        "Ref": "metadatatable5CDA8741"
      },
      "Export": {
        "Name": "DDBForMetaData"
      }
    },
    "SAPAuthSecret": {
      "Description": "Secret Name to store the SAP Auth data",
      "Value": {
        "Ref": "SAPAuth998143CD"
      },
      "Export": {
        "Name": "SAPAuthSecret"
      }
    }
  }
}