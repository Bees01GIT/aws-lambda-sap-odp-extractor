{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree"
      },
      "SAPODP": {
        "id": "SAPODP",
        "path": "SAPODP",
        "children": {
          "SAPLambdaRole": {
            "id": "SAPLambdaRole",
            "path": "SAPODP/SAPLambdaRole",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SAPODP/SAPLambdaRole/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "lambda.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "managedPolicyArns": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":iam::aws:policy/AWSLambdaExecute"
                          ]
                        ]
                      }
                    ]
                  }
                }
              },
              "DefaultPolicy": {
                "id": "DefaultPolicy",
                "path": "SAPODP/SAPLambdaRole/DefaultPolicy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "SAPODP/SAPLambdaRole/DefaultPolicy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Policy",
                      "aws:cdk:cloudformation:props": {
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "secretsmanager:GetSecretValue",
                              "Effect": "Allow",
                              "Resource": {
                                "Ref": "SAPAuth998143CD"
                              }
                            },
                            {
                              "Action": [
                                "dynamodb:BatchGetItem",
                                "dynamodb:GetRecords",
                                "dynamodb:GetShardIterator",
                                "dynamodb:Query",
                                "dynamodb:GetItem",
                                "dynamodb:Scan",
                                "dynamodb:BatchWriteItem",
                                "dynamodb:PutItem",
                                "dynamodb:UpdateItem",
                                "dynamodb:DeleteItem"
                              ],
                              "Effect": "Allow",
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "metadatatable5CDA8741",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Ref": "AWS::NoValue"
                                }
                              ]
                            },
                            {
                              "Action": [
                                "s3:GetObject*",
                                "s3:GetBucket*",
                                "s3:List*",
                                "s3:DeleteObject*",
                                "s3:PutObject*",
                                "s3:Abort*"
                              ],
                              "Effect": "Allow",
                              "Resource": [
                                {
                                  "Fn::GetAtt": [
                                    "databucketA1CA02F6",
                                    "Arn"
                                  ]
                                },
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      {
                                        "Fn::GetAtt": [
                                          "databucketA1CA02F6",
                                          "Arn"
                                        ]
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "policyName": "SAPLambdaRoleDefaultPolicyE38C9FDD",
                        "roles": [
                          {
                            "Ref": "SAPLambdaRole4EC987E5"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "SAPAuth": {
            "id": "SAPAuth",
            "path": "SAPODP/SAPAuth",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SAPODP/SAPAuth/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::SecretsManager::Secret",
                  "aws:cdk:cloudformation:props": {
                    "generateSecretString": {
                      "secretStringTemplate": "{\"user\":\"SAPUserName\"}",
                      "generateStringKey": "password"
                    }
                  }
                }
              }
            }
          },
          "metadatatable": {
            "id": "metadatatable",
            "path": "SAPODP/metadatatable",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SAPODP/metadatatable/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::DynamoDB::Table",
                  "aws:cdk:cloudformation:props": {
                    "keySchema": [
                      {
                        "attributeName": "odpServiceName",
                        "keyType": "HASH"
                      },
                      {
                        "attributeName": "odpEntitySetName",
                        "keyType": "RANGE"
                      }
                    ],
                    "attributeDefinitions": [
                      {
                        "attributeName": "odpServiceName",
                        "attributeType": "S"
                      },
                      {
                        "attributeName": "odpEntitySetName",
                        "attributeType": "S"
                      }
                    ],
                    "provisionedThroughput": {
                      "readCapacityUnits": 5,
                      "writeCapacityUnits": 5
                    }
                  }
                }
              },
              "ScalingRole": {
                "id": "ScalingRole",
                "path": "SAPODP/metadatatable/ScalingRole"
              }
            }
          },
          "databucket": {
            "id": "databucket",
            "path": "SAPODP/databucket",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "SAPODP/databucket/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                  "aws:cdk:cloudformation:props": {}
                }
              },
              "Notifications": {
                "id": "Notifications",
                "path": "SAPODP/databucket/Notifications"
              }
            }
          },
          "ExtractorLayer": {
            "id": "ExtractorLayer",
            "path": "SAPODP/ExtractorLayer",
            "children": {
              "Code": {
                "id": "Code",
                "path": "SAPODP/ExtractorLayer/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "SAPODP/ExtractorLayer/Code/Stage"
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "SAPODP/ExtractorLayer/Code/AssetBucket"
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "SAPODP/ExtractorLayer/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::LayerVersion",
                  "aws:cdk:cloudformation:props": {
                    "content": {
                      "s3Bucket": {
                        "Ref": "AssetParameters14b9cbb1138a9b0a69c0b6669bc755c43c36fce6dc90a9dce2d3d4a32f5c5faeS3BucketD50E262E"
                      },
                      "s3Key": {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::Select": [
                                0,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters14b9cbb1138a9b0a69c0b6669bc755c43c36fce6dc90a9dce2d3d4a32f5c5faeS3VersionKey5A5C69E3"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Fn::Select": [
                                1,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters14b9cbb1138a9b0a69c0b6669bc755c43c36fce6dc90a9dce2d3d4a32f5c5faeS3VersionKey5A5C69E3"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    },
                    "compatibleRuntimes": [
                      "python2.7",
                      "python3.6",
                      "python3.7"
                    ],
                    "description": "Layer to dynamically generator user certificates for SAP user",
                    "licenseInfo": "Apache-2.0"
                  }
                }
              }
            }
          },
          "AssetParameters": {
            "id": "AssetParameters",
            "path": "SAPODP/AssetParameters",
            "children": {
              "14b9cbb1138a9b0a69c0b6669bc755c43c36fce6dc90a9dce2d3d4a32f5c5fae": {
                "id": "14b9cbb1138a9b0a69c0b6669bc755c43c36fce6dc90a9dce2d3d4a32f5c5fae",
                "path": "SAPODP/AssetParameters/14b9cbb1138a9b0a69c0b6669bc755c43c36fce6dc90a9dce2d3d4a32f5c5fae",
                "children": {
                  "S3Bucket": {
                    "id": "S3Bucket",
                    "path": "SAPODP/AssetParameters/14b9cbb1138a9b0a69c0b6669bc755c43c36fce6dc90a9dce2d3d4a32f5c5fae/S3Bucket"
                  },
                  "S3VersionKey": {
                    "id": "S3VersionKey",
                    "path": "SAPODP/AssetParameters/14b9cbb1138a9b0a69c0b6669bc755c43c36fce6dc90a9dce2d3d4a32f5c5fae/S3VersionKey"
                  },
                  "ArtifactHash": {
                    "id": "ArtifactHash",
                    "path": "SAPODP/AssetParameters/14b9cbb1138a9b0a69c0b6669bc755c43c36fce6dc90a9dce2d3d4a32f5c5fae/ArtifactHash"
                  }
                }
              },
              "9b8394427f6b363b4b2fe006ac103688fb17916909a0037e7661d1c25748e49b": {
                "id": "9b8394427f6b363b4b2fe006ac103688fb17916909a0037e7661d1c25748e49b",
                "path": "SAPODP/AssetParameters/9b8394427f6b363b4b2fe006ac103688fb17916909a0037e7661d1c25748e49b",
                "children": {
                  "S3Bucket": {
                    "id": "S3Bucket",
                    "path": "SAPODP/AssetParameters/9b8394427f6b363b4b2fe006ac103688fb17916909a0037e7661d1c25748e49b/S3Bucket"
                  },
                  "S3VersionKey": {
                    "id": "S3VersionKey",
                    "path": "SAPODP/AssetParameters/9b8394427f6b363b4b2fe006ac103688fb17916909a0037e7661d1c25748e49b/S3VersionKey"
                  },
                  "ArtifactHash": {
                    "id": "ArtifactHash",
                    "path": "SAPODP/AssetParameters/9b8394427f6b363b4b2fe006ac103688fb17916909a0037e7661d1c25748e49b/ArtifactHash"
                  }
                }
              }
            }
          },
          "TestLambdaFunction": {
            "id": "TestLambdaFunction",
            "path": "SAPODP/TestLambdaFunction",
            "children": {
              "Code": {
                "id": "Code",
                "path": "SAPODP/TestLambdaFunction/Code",
                "children": {
                  "Stage": {
                    "id": "Stage",
                    "path": "SAPODP/TestLambdaFunction/Code/Stage"
                  },
                  "AssetBucket": {
                    "id": "AssetBucket",
                    "path": "SAPODP/TestLambdaFunction/Code/AssetBucket"
                  }
                }
              },
              "Resource": {
                "id": "Resource",
                "path": "SAPODP/TestLambdaFunction/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::Lambda::Function",
                  "aws:cdk:cloudformation:props": {
                    "code": {
                      "s3Bucket": {
                        "Ref": "AssetParameters9b8394427f6b363b4b2fe006ac103688fb17916909a0037e7661d1c25748e49bS3Bucket4ED5D74C"
                      },
                      "s3Key": {
                        "Fn::Join": [
                          "",
                          [
                            {
                              "Fn::Select": [
                                0,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters9b8394427f6b363b4b2fe006ac103688fb17916909a0037e7661d1c25748e49bS3VersionKey0D9256E2"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "Fn::Select": [
                                1,
                                {
                                  "Fn::Split": [
                                    "||",
                                    {
                                      "Ref": "AssetParameters9b8394427f6b363b4b2fe006ac103688fb17916909a0037e7661d1c25748e49bS3VersionKey0D9256E2"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        ]
                      }
                    },
                    "handler": "main.lambda_handler",
                    "role": {
                      "Fn::GetAtt": [
                        "SAPLambdaRole4EC987E5",
                        "Arn"
                      ]
                    },
                    "runtime": "python3.6",
                    "description": "Sample Lambda function to for extracting from ODP",
                    "environment": {
                      "variables": {
                        "sapHostName": "<your sap hostname> for e.g. mysaphost.com>",
                        "sapPort": "<your sap https port> for e.g. 44300",
                        "sapAuthSecret": {
                          "Ref": "SAPAuth998143CD"
                        },
                        "metaDataDDBName": {
                          "Ref": "metadatatable5CDA8741"
                        },
                        "odpServiceName": "<your odata service name>",
                        "odpEntitySetName": "<your odp entity set name within the odata service>",
                        "dataChunkSize": "1000",
                        "dataS3Bucket": {
                          "Ref": "databucketA1CA02F6"
                        },
                        "dataS3Folder": "<Your Folder for storing the data to>"
                      }
                    },
                    "layers": [
                      {
                        "Ref": "ExtractorLayer2ED491C2"
                      }
                    ],
                    "memorySize": 2048,
                    "timeout": 300
                  }
                }
              }
            }
          },
          "S3BucketForExtracts": {
            "id": "S3BucketForExtracts",
            "path": "SAPODP/S3BucketForExtracts"
          },
          "DDBForMetaData": {
            "id": "DDBForMetaData",
            "path": "SAPODP/DDBForMetaData"
          },
          "SAPAuthSecret": {
            "id": "SAPAuthSecret",
            "path": "SAPODP/SAPAuthSecret"
          }
        }
      }
    }
  }
}